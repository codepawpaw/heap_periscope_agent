# config/initializers/heap_periscope_agent_controller.rb
# This file is automatically generated by the heap_periscope_agent gem.
# It instruments Rails controller actions to report living objects.

if defined?(Rails) && Rails.version.to_i >= 3
  ActiveSupport.on_load(:action_controller_base) do
    # Include this module to enable instrumentation for all controller actions.
    # Ensure `config.enable_controller_instrumentation = true` is set in your
    # main heap_periscope_agent initializer.
    module HeapPeriscopeAgentControllerInstrumentation
      extend ActiveSupport::Concern

      included do
        around_action :heap_periscope_agent_track_action
      end

      private

      def heap_periscope_agent_track_action
        if HeapPeriscopeAgent.configuration.enable_controller_instrumentation
          yield # Execute the controller action

          # After the action, collect detailed living objects
          detailed_objects = HeapPeriscopeAgent::Collector.collect_detailed_living_objects_for_span(
            HeapPeriscopeAgent.configuration.detailed_objects_limit
          )

          span_name = "#{self.class.name}##{action_name}"
          HeapPeriscopeAgent::Reporter.add_span_report('controller', span_name, detailed_objects)
        else
          yield # Execute the controller action without tracking
        end
      end
    end

    # Include the instrumentation module into ActionController::Base
    # This makes it apply to all controllers inheriting from ApplicationController
    ActionController::Base.send :include, HeapPeriscopeAgentControllerInstrumentation
  end
end