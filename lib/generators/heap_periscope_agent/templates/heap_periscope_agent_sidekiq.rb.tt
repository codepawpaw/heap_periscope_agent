# This file was generated by `rails generate heap_periscope_agent:sidekiq_middleware`
# It sets up Sidekiq server middleware to automatically track memory usage for all jobs.

if defined?(Sidekiq) && Sidekiq.server?
  HeapPeriscopeAgent.log("Setting up Sidekiq server middleware for HeapPeriscopeAgent.")

  class HeapPeriscopeAgent::SidekiqMiddleware
    def call(worker, job, queue)
      # The agent uses a reference counter, so it's safe to call start/stop for every job.
      # It will only run one reporting thread per process.
      HeapPeriscopeAgent.start
      yield
    ensure
      HeapPeriscopeAgent.stop
    end
  end

  Sidekiq.configure_server do |config|
    config.server_middleware do |chain|
      HeapPeriscopeAgent.log("Adding HeapPeriscopeAgent::SidekiqMiddleware to Sidekiq.")
      chain.add HeapPeriscopeAgent::SidekiqMiddleware
    end
  end
end